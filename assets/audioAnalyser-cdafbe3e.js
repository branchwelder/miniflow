function f(){return{displayName:"Audio Analyser",outputConfig:{analyserNode:{type:"AudioNode"}},stateConfig:{canvas:{type:"Element"}},inputConfig:{node:{type:"AudioNode",change({outputs:e},n,t){t&&t.disconnect(e.analyserNode),n&&n.connect(e.analyserNode)}}},connected({dom:e,state:n}){e.appendChild(n.canvas)},setup({global:e,state:n,outputs:t}){t.analyserNode=e.audioContext.createAnalyser(),n.canvas=document.createElement("canvas"),n.canvas.style.cssText="display:block"},render({state:e,outputs:n}){const t=n.analyserNode.fftSize,c=new Uint8Array(t),i=e.canvas.width,l=e.canvas.height;n.analyserNode.getByteTimeDomainData(c);const a=e.canvas.getContext("2d");a.fillStyle="rgb(200, 200, 200)",a.fillRect(0,0,i,l),a.lineWidth=2,a.strokeStyle="rgb(0, 0, 0)",a.beginPath();const r=i*1/t;let s=0;for(let o=0;o<t;o++){let d=c[o]/128*l/2;o===0?a.moveTo(s,d):a.lineTo(s,d),s+=r}a.lineTo(i,l/2),a.stroke()}}}export{f as default};
