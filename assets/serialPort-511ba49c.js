import{D as d,x as l}from"./index-7bd21d40.js";class p{constructor(){this.container=""}transform(r,a){this.container+=r;const e=this.container.split(`\r
`);this.container=e.pop(),e.forEach(t=>a.enqueue(t))}flush(r){r.enqueue(this.container)}}function b(){async function i(e){await e.port.close(),e.port=void 0}async function r(e){if(!1 in navigator){alert("Please update to the latest Chrome");return}const t=await navigator.serial.requestPort();t.getInfo(),await t.open({baudRate:9600}),e.port=t}function a(e){return e.port?l`<button @click=${()=>i(e)}>
        disconnect
      </button>`:l`<button @click=${()=>r(e)}>connect</button>`}return{displayName:"Serial Port",stateConfig:{port:{type:"port",value:void 0,change({state:e,outputs:t},n,u){n||(t.readableStream=void 0,t.writableStream=void 0);const o=new TextEncoderStream;o.readable.pipeTo(n.writable);let c=new TextDecoderStream;n.readable.pipeTo(c.writable);const s=c.readable.pipeThrough(new TransformStream(new p));t.readableStream=s.getReader(),t.writableStream=o.writable.getWriter()}}},outputConfig:{readableStream:{type:"readableStream"},writableStream:{type:"writableStream"}},render({dom:e,state:t}){d(a(t),e)},saveState(e){return{port:void 0}}}}export{b as default};
